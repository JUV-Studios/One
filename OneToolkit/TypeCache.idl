namespace OneToolkit.Lifecycle
{
	delegate Object SingletonInstanceProvider(Windows.UI.Xaml.Interop.TypeName typeId);

	enum TypeCacheKind
	{
		Weak, Strong
	};

	[default_interface]
	runtimeclass TypeCache
	{
		TypeCache(TypeCacheKind kind);
		TypeCacheKind Kind { get; };
		Boolean IsTypePresent(Windows.UI.Xaml.Interop.TypeName typeId);
		void Emplace(Windows.UI.Xaml.Interop.TypeName typeId, Object instance);
		void Remove(Windows.UI.Xaml.Interop.TypeName typeId);
		Object GetInstance(Windows.UI.Xaml.Interop.TypeName typeId);
		Object GetInstance(Windows.UI.Xaml.Interop.TypeName typeId, SingletonInstanceProvider instanceProvider);
	}
}