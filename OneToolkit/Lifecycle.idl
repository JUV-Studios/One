namespace OneToolkit.Lifecycle
{
	enum SuspendableEventType
	{
		Suspended, Resumed
	};

	interface ISuspendable
	{
		[noexcept] Boolean IsSuspended { get; };
		event Windows.Foundation.TypedEventHandler<ISuspendable, SuspendableEventType> StateChanged;
	};

	interface IAsyncClosable requires Windows.Foundation.IClosable
	{
		Windows.Foundation.IAsyncAction CloseAsync();
		Windows.Foundation.IAsyncOperation<Boolean> RequestCloseAsync();
	};

	interface IAsyncSuspendable requires ISuspendable
	{
		Windows.Foundation.IAsyncAction SuspendAsync();
		Windows.Foundation.IAsyncAction ResumeAsync();
	};
}