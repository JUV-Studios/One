namespace OneToolkit.Lifecycle
{
	enum SuspendableEventType
	{
		Suspended, Resumed
	};

	// Compatible with Platform::Details::IEquatable.
	[uuid("DE0CBAEC-E077-4E92-84BE-C6D48DCA3006")]
	interface IEquatable
	{
		[noexcept] Boolean Equals(Object another);
	}
	
	interface IComparable
	{
		[noexcept] Int32 CompareTo(Object another);
	};

	interface ISuspendableBase
	{
		[noexcept] Boolean IsSuspended { get; };
		event Windows.Foundation.TypedEventHandler<ISuspendable, SuspendableEventType> StateChanged;
	}

	interface ISuspendable requires ISuspendableBase
	{
		Boolean RequestResume();
		Boolean RequestSuspend();
	}

	interface IAsyncClosable requires Windows.Foundation.IClosable
	{
		Windows.Foundation.IAsyncAction CloseAsync();
	}

	interface IAsyncSuspendable requires ISuspendableBase
	{
		Windows.Foundation.IAsyncAction ResumeAsync();
		Windows.Foundation.IAsyncAction SuspendAsync();
	}
}