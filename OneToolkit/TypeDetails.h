#pragma once#include "Runtime.TypeDetails.g.h"namespace winrt::OneToolkit::Runtime{    namespace implementation    {        struct TypeDetails : TypeDetailsT<TypeDetails>        {        public:            TypeDetails(Windows::UI::Xaml::Interop::TypeName typeId);            DeclareAutoProperty(Windows::UI::Xaml::Interop::TypeName, Id, {});            DeclareAutoProperty(hstring, Name, {});            DeclareAutoProperty(hstring, Namespace, {});            hstring QualifiedName() const noexcept;            OneToolkit::Runtime::MetadataFile Metadata();            Windows::UI::Xaml::Interop::TypeKind Kind() const noexcept;            uint64_t BaseSize();            IInspectable CreateInstance();            static Windows::Foundation::Collections::IVector<CustomTypeActivationHandler> CustomActivators() noexcept;            static OneToolkit::Runtime::TypeDetails GetTypeDetails(IInspectable value);        private:            OneToolkit::Runtime::MetadataFile m_Metadata = nullptr;        };    }    namespace factory_implementation    {        struct TypeDetails : TypeDetailsT<TypeDetails, implementation::TypeDetails>        {        };    }}